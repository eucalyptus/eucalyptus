#!/bin/bash -e
#
# Copyright 2015-2017 Ent. Services Development Corporation LP
#
# Redistribution and use of this software in source and binary forms,
# with or without modification, are permitted provided that the
# following conditions are met:
#
#   Redistributions of source code must retain the above copyright
#   notice, this list of conditions and the following disclaimer.
#
#   Redistributions in binary form must reproduce the above copyright
#   notice, this list of conditions and the following disclaimer
#   in the documentation and/or other materials provided with the
#   distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
# COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.

KEYSTORE_PATH="$EUCALYPTUS/var/lib/eucalyptus/keys/euca.p12"
DB_HOST=127.0.0.1
DB_PORT=8777

KEY_QUERY="FROM eucalyptus_auth.auth_access_key k JOIN eucalyptus_auth.auth_user u ON k.auth_access_key_owning_user=u.id JOIN eucalyptus_auth.auth_group_has_users gu ON u.id=gu.auth_user_id JOIN eucalyptus_auth.auth_group g ON gu.auth_group_id=g.id JOIN eucalyptus_auth.auth_account a ON g.auth_group_owning_account=a.id WHERE a.auth_account_name='eucalyptus' AND g.auth_group_name='_admin' AND k.auth_access_key_active=TRUE"
KEY_COLUMNS="k.auth_access_key_query_id, k.auth_access_key_key"

if [ "$#" -ne 0 ]; then
    fmt -u >&2 <<EOF
usage: eval \`$0\`

$(basename $0) generates cloud admin credentials for system setup
and recovery and outputs them in a form suitable for running inside
an \`\`eval'' command.  It must be run by the superuser on an active
cloud controller.
EOF
    exit 1
elif [ $(id -u) -ne 0 ]; then
    echo "$(basename $0): Permission denied" >&2
    exit 1
fi

export PGPASSWORD=$(echo -n eucalyptus | openssl dgst -sha256 -sign <(openssl pkcs12 -in "$KEYSTORE_PATH" -passin pass:eucalyptus -nodes -nomacver | sed -n '/friendlyName: eucalyptus$/,/friendlyName:/{/-----BEGIN.*PRIVATE/,/-----END.*PRIVATE/p}') | sha256sum | sed 's/ .*//')
[ ! -r "/etc/eucalyptus/eucalyptus.conf" ] || source "/etc/eucalyptus/eucalyptus.conf"
if [ -n "${CLOUD_DB_HOST:-}" ] ; then
  DB_HOST="${CLOUD_DB_HOST}"
  DB_PORT="${CLOUD_DB_PORT:-5432}"
  export PGPASSWORD="${CLOUD_DB_PASSWORD}"
fi
n_creds=$(psql -Aqt -F : -h $DB_HOST -p $DB_PORT -U eucalyptus -w eucalyptus_shared -c "SELECT COUNT(*)     $KEY_QUERY")
creds=$(  psql -Aqt -F : -h $DB_HOST -p $DB_PORT -U eucalyptus -w eucalyptus_shared -c "SELECT $KEY_COLUMNS $KEY_QUERY LIMIT 1")
key_id=$(echo $creds | cut -d: -f1)
secret_key=$(echo $creds | cut -d: -f2)

if [ "$n_creds" -eq 0 ]; then
    echo "$(basename $0): eucalyptus admin has no access keys; please restart eucalyptus-cloud and try again" >&2
    exit 1
elif [ -z "$key_id" ] || [ -z "$secret_key" ]; then
    echo "$(basename $0): failed to obtain access keys; ensure eucalyptus-cloud has finished starting" >&2
    exit 1
fi

cat <<EOF
export AWS_IAM_URL=http://127.0.0.1:8773/services/Euare;
export EUCA_BOOTSTRAP_URL=http://127.0.0.1:8773/services/Empyrean;
export EUCA_PROPERTIES_URL=http://127.0.0.1:8773/services/Properties;
export AWS_ACCESS_KEY_ID="$key_id";
export AWS_ACCESS_KEY="$key_id";
export EC2_ACCESS_KEY="$key_id";
export AWS_SECRET_ACCESS_KEY="$secret_key";
export AWS_SECRET_KEY="$secret_key";
export EC2_SECRET_KEY="$secret_key";
unset AWS_CREDENTIAL_FILE;
unset AWS_SESSION_TOKEN;
unset AWS_SECURITY_TOKEN;
unset EC2_USER_ID;

# These are automatic CLC admin credentials generated on
# $(date -u).
#
# If you can read this, rerun this program with eval:
#     eval \`$0\`
EOF
