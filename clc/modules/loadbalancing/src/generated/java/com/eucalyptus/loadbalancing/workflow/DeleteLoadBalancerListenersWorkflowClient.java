/*
 * This code was generated by AWS Flow Framework Annotation Processor.
 * Refer to Amazon Simple Workflow Service documentation at http://aws.amazon.com/documentation/swf 
 *
 * Any changes made directly to this file will be lost when 
 * the code is regenerated.
 */
 package com.eucalyptus.loadbalancing.workflow;

import com.amazonaws.services.simpleworkflow.flow.core.Promise;
import com.amazonaws.services.simpleworkflow.flow.StartWorkflowOptions;
import com.amazonaws.services.simpleworkflow.flow.WorkflowClient;

/**
 * Generated from {@link com.eucalyptus.loadbalancing.workflow.DeleteLoadBalancerListenersWorkflow}. 
 * Used to invoke child workflows asynchronously from parent workflow code.
 * Created through {@link DeleteLoadBalancerListenersWorkflowClientFactory#getClient}.
 * <p>
 * When running outside of the scope of a workflow use {@link DeleteLoadBalancerListenersWorkflowClientExternal} instead.
 */
public interface DeleteLoadBalancerListenersWorkflowClient extends WorkflowClient
{

    /**
     * Generated from {@link com.eucalyptus.loadbalancing.workflow.DeleteLoadBalancerListenersWorkflow#deleteLoadBalancerListeners}
     */
    Promise<Void> deleteLoadBalancerListeners(String accountId, String loadbalancer, Integer[] ports);

    /**
     * Generated from {@link com.eucalyptus.loadbalancing.workflow.DeleteLoadBalancerListenersWorkflow#deleteLoadBalancerListeners}
     */
    Promise<Void> deleteLoadBalancerListeners(String accountId, String loadbalancer, Integer[] ports, Promise<?>... waitFor);

    /**
     * Generated from {@link com.eucalyptus.loadbalancing.workflow.DeleteLoadBalancerListenersWorkflow#deleteLoadBalancerListeners}
     */
    Promise<Void> deleteLoadBalancerListeners(String accountId, String loadbalancer, Integer[] ports, StartWorkflowOptions optionsOverride, Promise<?>... waitFor);

    /**
     * Generated from {@link com.eucalyptus.loadbalancing.workflow.DeleteLoadBalancerListenersWorkflow#deleteLoadBalancerListeners}
     */
    Promise<Void> deleteLoadBalancerListeners(Promise<String> accountId, Promise<String> loadbalancer, Promise<Integer[]> ports);

    /**
     * Generated from {@link com.eucalyptus.loadbalancing.workflow.DeleteLoadBalancerListenersWorkflow#deleteLoadBalancerListeners}
     */
    Promise<Void> deleteLoadBalancerListeners(Promise<String> accountId, Promise<String> loadbalancer, Promise<Integer[]> ports, Promise<?>... waitFor);

    /**
     * Generated from {@link com.eucalyptus.loadbalancing.workflow.DeleteLoadBalancerListenersWorkflow#deleteLoadBalancerListeners}
     */
    Promise<Void> deleteLoadBalancerListeners(Promise<String> accountId, Promise<String> loadbalancer, Promise<Integer[]> ports, StartWorkflowOptions optionsOverride, Promise<?>... waitFor);

}