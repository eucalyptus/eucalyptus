<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright 2009-2013 Eucalyptus Systems, Inc.

  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; version 3 of the License.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program.  If not, see http://www.gnu.org/licenses/.

  Please contact Eucalyptus Systems, Inc., 6755 Hollister Ave., Goleta
  CA 93117, USA or visit http://www.eucalyptus.com/licenses/ if you need
  additional information or have any questions.

  This file may incorporate work covered under the following copyright
  and permission notice:

    Software License Agreement (BSD License)

    Copyright (c) 2008, Regents of the University of California
    All rights reserved.

    Redistribution and use of this software in source and binary forms,
    with or without modification, are permitted provided that the
    following conditions are met:

      Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.

      Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer
      in the documentation and/or other materials provided with the
      distribution.

    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
    "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
    FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
    COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
    INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
    BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
    LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
    CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
    LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
    ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
    POSSIBILITY OF SUCH DAMAGE. USERS OF THIS SOFTWARE ACKNOWLEDGE
    THE POSSIBLE PRESENCE OF OTHER OPEN SOURCE LICENSED MATERIAL,
    COPYRIGHTED MATERIAL OR PATENTED MATERIAL IN THIS SOFTWARE,
    AND IF ANY SUCH MATERIAL IS DISCOVERED THE PARTY DISCOVERING
    IT MAY INFORM DR. RICH WOLSKI AT THE UNIVERSITY OF CALIFORNIA,
    SANTA BARBARA WHO WILL THEN ASCERTAIN THE MOST APPROPRIATE REMEDY,
    WHICH IN THE REGENTS' DISCRETION MAY INCLUDE, WITHOUT LIMITATION,
    REPLACEMENT OF THE CODE SO IDENTIFIED, LICENSING OF THE CODE SO
    IDENTIFIED, OR WITHDRAWAL OF THE CODE CAPABILITY TO THE EXTENT
    NEEDED TO COMPLY WITH ANY SUCH LICENSES OR RIGHTS.
  -->
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
      xmlns:spring="http://www.springframework.org/schema/beans"
      xmlns:euca="http://www.eucalyptus.com/schema/cloud/3.4"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/3.4/mule.xsd
        http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/3.4/mule-vm.xsd
        http://www.eucalyptus.com/schema/cloud/3.4 http://www.eucalyptus.com/schema/cloud/3.4/euca.xsd">

    <spring:beans>
        <spring:import resource="classpath:eucalyptus-services.xml"/>
        <spring:import resource="classpath:eucalyptus-userdata.xml"/>
        <spring:import resource="classpath:eucalyptus-runtime.xml"/>
        <spring:import resource="classpath:eucalyptus-storage.xml"/>
        <spring:import resource="classpath:eucalyptus-system.xml"/>
        <spring:import resource="classpath:eucalyptus-import-export.xml"/>
    </spring:beans>

    <model name="eucalyptus">
    <default-service-exception-strategy>
      <outbound-endpoint ref="ReplyQueueEndpoint" />
    </default-service-exception-strategy>
    <service name="EucalyptusRequestQueueSync">
        <inbound>
            <inbound-endpoint ref="EucalyptusInternalVM" />
        </inbound>
        <outbound>
            <filtering-router>
                <outbound-endpoint ref="ImageImportWS" />
                <payload-type-filter expectedType="edu.ucsb.eucalyptus.msgs.VmImportMessage" />
            </filtering-router>
            <filtering-router>
                <outbound-endpoint ref="ImageExportWS" />
                <payload-type-filter expectedType="edu.ucsb.eucalyptus.msgs.VmExportMessage" />
            </filtering-router>
            <filtering-router>
                <outbound-endpoint ref="PrivateNetworksWS" />
                <payload-type-filter expectedType="edu.ucsb.eucalyptus.msgs.VirtualNetworkingMessage" />
            </filtering-router>
            <filtering-router>
                <outbound-endpoint ref="SpotWS" />
                <payload-type-filter expectedType="edu.ucsb.eucalyptus.msgs.SpotInstanceMessage" />
            </filtering-router>
            <filtering-router>
                <outbound-endpoint ref="ReservedWS" />
                <payload-type-filter expectedType="edu.ucsb.eucalyptus.msgs.ReservedInstanceMessage" />
            </filtering-router>
            <filtering-router>
                <outbound-endpoint ref="VmControlWS" />
                <payload-type-filter expectedType="edu.ucsb.eucalyptus.msgs.VmControlMessage" />
            </filtering-router>
            <filtering-router>
                <outbound-endpoint ref="VmControlWS" /><!-- GRZE: should be different dest service -->
                <payload-type-filter expectedType="com.eucalyptus.vm.VmBundleMessage" />
            </filtering-router>
            <filtering-router>
                <outbound-endpoint ref="VmTypesWS" />
                <payload-type-filter expectedType="com.eucalyptus.compute.common.backend.VmTypeMessage" />
            </filtering-router>
            <filtering-router>
                <outbound-endpoint ref="ClusterEndpointWS" />
                <payload-type-filter expectedType="edu.ucsb.eucalyptus.msgs.CloudClusterMessage" />
            </filtering-router>
            <filtering-router>
                <outbound-endpoint ref="ClusterEndpointWS" />
                <payload-type-filter expectedType="edu.ucsb.eucalyptus.msgs.CloudTopologyMessage" />
            </filtering-router>
            <filtering-router>
                <outbound-endpoint ref="KeyPairWS" />
                <payload-type-filter expectedType="edu.ucsb.eucalyptus.msgs.VmKeyPairMessage" />
            </filtering-router>
            <filtering-router>
                <outbound-endpoint ref="ImageWS" />
                <payload-type-filter expectedType="edu.ucsb.eucalyptus.msgs.VmImageMessage" />
            </filtering-router>
            <filtering-router>
                <outbound-endpoint ref="VolumeWS" />
                <payload-type-filter expectedType="edu.ucsb.eucalyptus.msgs.BlockVolumeMessage" />
            </filtering-router>
            <filtering-router>
                <outbound-endpoint ref="SnapshotWS" />
                <payload-type-filter expectedType="edu.ucsb.eucalyptus.msgs.BlockSnapshotMessage" />
            </filtering-router>
            <filtering-router>
                <outbound-endpoint ref="AddressWS" />
                <payload-type-filter expectedType="edu.ucsb.eucalyptus.msgs.VmAddressMessage" />
            </filtering-router>
            <filtering-router>
                <outbound-endpoint ref="GroupsWS" />
                <payload-type-filter expectedType="edu.ucsb.eucalyptus.msgs.VmSecurityMessage" />
            </filtering-router>
            <filtering-router>
                <outbound-endpoint ref="TagsWS" />
                <payload-type-filter expectedType="edu.ucsb.eucalyptus.msgs.ResourceTagMessage" />
            </filtering-router>
            <filtering-router>
                <outbound-endpoint ref="ShortBusWS" />
                <payload-type-filter expectedType="edu.ucsb.eucalyptus.msgs.EucalyptusMessage" />
            </filtering-router>
        </outbound>
    </service>

    <service name="EucalyptusRequestQueue">
      <inbound>
        <inbound-endpoint ref="EucalyptusRequestQueueEndpoint"/>
      </inbound>
      <outbound>
        <chaining-router>
          <outbound-endpoint ref="EucalyptusInternalVM"/>
          <!--
          The response is not required here, but without it the chaining-router
          fails when debug logging is enabled.
          -->
          <outbound-endpoint ref="ReplyQueueEndpoint" exchange-pattern="request-response"/>
        </chaining-router>
      </outbound>
    </service>

    <service name="ShortBus">
      <inbound>
        <inbound-endpoint ref="ShortBusWS" />
      </inbound>
      <component class="edu.ucsb.eucalyptus.ic.Eucalyptus" />
    </service>

    <service name="Eucalyptus">
      <inbound>
        <inbound-endpoint ref="EucalyptusWS" />
      </inbound>
      <component class="edu.ucsb.eucalyptus.ic.Eucalyptus" />
    </service>

  </model>
</mule>
