/*
 * This code was generated by AWS Flow Framework Annotation Processor.
 * Refer to Amazon Simple Workflow Service documentation at http://aws.amazon.com/documentation/swf 
 *
 * Any changes made directly to this file will be lost when 
 * the code is regenerated.
 */
 package com.eucalyptus.portal.workflow;

import com.amazonaws.services.simpleworkflow.flow.core.Promise;
import com.amazonaws.services.simpleworkflow.flow.ActivitiesClient;
import com.amazonaws.services.simpleworkflow.flow.ActivitySchedulingOptions;

/**
 * Generated from {@link com.eucalyptus.portal.workflow.InstanceLogActivities}. 
 * Used to invoke activities asynchronously from workflow code.
 */
public interface InstanceLogActivitiesClient extends ActivitiesClient
{

    /**
     * Generated from {@link com.eucalyptus.portal.workflow.InstanceLogActivities#distributeEvents}
     */
    Promise<java.util.Map<java.lang.String,java.lang.String>> distributeEvents(String globalQueue);

    /**
     * Generated from {@link com.eucalyptus.portal.workflow.InstanceLogActivities#distributeEvents}
     */
    Promise<java.util.Map<java.lang.String,java.lang.String>> distributeEvents(String globalQueue, Promise<?>... waitFor);

    /**
     * Generated from {@link com.eucalyptus.portal.workflow.InstanceLogActivities#distributeEvents}
     */
    Promise<java.util.Map<java.lang.String,java.lang.String>> distributeEvents(String globalQueue, ActivitySchedulingOptions optionsOverride, Promise<?>... waitFor);

    /**
     * Generated from {@link com.eucalyptus.portal.workflow.InstanceLogActivities#distributeEvents}
     */
    Promise<java.util.Map<java.lang.String,java.lang.String>> distributeEvents(Promise<String> globalQueue);

    /**
     * Generated from {@link com.eucalyptus.portal.workflow.InstanceLogActivities#distributeEvents}
     */
    Promise<java.util.Map<java.lang.String,java.lang.String>> distributeEvents(Promise<String> globalQueue, Promise<?>... waitFor);

    /**
     * Generated from {@link com.eucalyptus.portal.workflow.InstanceLogActivities#distributeEvents}
     */
    Promise<java.util.Map<java.lang.String,java.lang.String>> distributeEvents(Promise<String> globalQueue, ActivitySchedulingOptions optionsOverride, Promise<?>... waitFor);

    /**
     * Generated from {@link com.eucalyptus.portal.workflow.InstanceLogActivities#persist}
     */
    Promise<Void> persist(String accountId, String queueName);

    /**
     * Generated from {@link com.eucalyptus.portal.workflow.InstanceLogActivities#persist}
     */
    Promise<Void> persist(String accountId, String queueName, Promise<?>... waitFor);

    /**
     * Generated from {@link com.eucalyptus.portal.workflow.InstanceLogActivities#persist}
     */
    Promise<Void> persist(String accountId, String queueName, ActivitySchedulingOptions optionsOverride, Promise<?>... waitFor);

    /**
     * Generated from {@link com.eucalyptus.portal.workflow.InstanceLogActivities#persist}
     */
    Promise<Void> persist(Promise<String> accountId, Promise<String> queueName);

    /**
     * Generated from {@link com.eucalyptus.portal.workflow.InstanceLogActivities#persist}
     */
    Promise<Void> persist(Promise<String> accountId, Promise<String> queueName, Promise<?>... waitFor);

    /**
     * Generated from {@link com.eucalyptus.portal.workflow.InstanceLogActivities#persist}
     */
    Promise<Void> persist(Promise<String> accountId, Promise<String> queueName, ActivitySchedulingOptions optionsOverride, Promise<?>... waitFor);

    /**
     * Generated from {@link com.eucalyptus.portal.workflow.InstanceLogActivities#deleteQueues}
     */
    Promise<Void> deleteQueues(java.util.List<java.lang.String> queues);

    /**
     * Generated from {@link com.eucalyptus.portal.workflow.InstanceLogActivities#deleteQueues}
     */
    Promise<Void> deleteQueues(java.util.List<java.lang.String> queues, Promise<?>... waitFor);

    /**
     * Generated from {@link com.eucalyptus.portal.workflow.InstanceLogActivities#deleteQueues}
     */
    Promise<Void> deleteQueues(java.util.List<java.lang.String> queues, ActivitySchedulingOptions optionsOverride, Promise<?>... waitFor);

    /**
     * Generated from {@link com.eucalyptus.portal.workflow.InstanceLogActivities#deleteQueues}
     */
    Promise<Void> deleteQueues(Promise<java.util.List<java.lang.String>> queues);

    /**
     * Generated from {@link com.eucalyptus.portal.workflow.InstanceLogActivities#deleteQueues}
     */
    Promise<Void> deleteQueues(Promise<java.util.List<java.lang.String>> queues, Promise<?>... waitFor);

    /**
     * Generated from {@link com.eucalyptus.portal.workflow.InstanceLogActivities#deleteQueues}
     */
    Promise<Void> deleteQueues(Promise<java.util.List<java.lang.String>> queues, ActivitySchedulingOptions optionsOverride, Promise<?>... waitFor);

    /**
     * Generated from {@link com.eucalyptus.portal.workflow.InstanceLogActivities#cleanupQueues}
     */
    Promise<Void> cleanupQueues();

    /**
     * Generated from {@link com.eucalyptus.portal.workflow.InstanceLogActivities#cleanupQueues}
     */
    Promise<Void> cleanupQueues(Promise<?>... waitFor);

    /**
     * Generated from {@link com.eucalyptus.portal.workflow.InstanceLogActivities#cleanupQueues}
     */
    Promise<Void> cleanupQueues(ActivitySchedulingOptions optionsOverride, Promise<?>... waitFor);

}