/*
 * This code was generated by AWS Flow Framework Annotation Processor.
 * Refer to Amazon Simple Workflow Service documentation at http://aws.amazon.com/documentation/swf 
 *
 * Any changes made directly to this file will be lost when 
 * the code is regenerated.
 */
 package com.eucalyptus.portal.workflow;

import com.amazonaws.services.simpleworkflow.flow.core.Promise;
import com.amazonaws.services.simpleworkflow.flow.ActivitiesClient;
import com.amazonaws.services.simpleworkflow.flow.ActivitySchedulingOptions;

/**
 * Generated from {@link com.eucalyptus.portal.workflow.MonthlyReportActivities}. 
 * Used to invoke activities asynchronously from workflow code.
 */
public interface MonthlyReportActivitiesClient extends ActivitiesClient
{

    /**
     * Generated from {@link com.eucalyptus.portal.workflow.MonthlyReportActivities#listCandidateAccounts}
     */
    Promise<java.util.List<java.lang.String>> listCandidateAccounts();

    /**
     * Generated from {@link com.eucalyptus.portal.workflow.MonthlyReportActivities#listCandidateAccounts}
     */
    Promise<java.util.List<java.lang.String>> listCandidateAccounts(Promise<?>... waitFor);

    /**
     * Generated from {@link com.eucalyptus.portal.workflow.MonthlyReportActivities#listCandidateAccounts}
     */
    Promise<java.util.List<java.lang.String>> listCandidateAccounts(ActivitySchedulingOptions optionsOverride, Promise<?>... waitFor);

    /**
     * Generated from {@link com.eucalyptus.portal.workflow.MonthlyReportActivities#queryMonthlyAwsUsage}
     */
    Promise<java.util.List<com.eucalyptus.portal.workflow.AwsUsageRecord>> queryMonthlyAwsUsage(String accountId, String service, String year, String month, java.util.Date end);

    /**
     * Generated from {@link com.eucalyptus.portal.workflow.MonthlyReportActivities#queryMonthlyAwsUsage}
     */
    Promise<java.util.List<com.eucalyptus.portal.workflow.AwsUsageRecord>> queryMonthlyAwsUsage(String accountId, String service, String year, String month, java.util.Date end, Promise<?>... waitFor);

    /**
     * Generated from {@link com.eucalyptus.portal.workflow.MonthlyReportActivities#queryMonthlyAwsUsage}
     */
    Promise<java.util.List<com.eucalyptus.portal.workflow.AwsUsageRecord>> queryMonthlyAwsUsage(String accountId, String service, String year, String month, java.util.Date end, ActivitySchedulingOptions optionsOverride, Promise<?>... waitFor);

    /**
     * Generated from {@link com.eucalyptus.portal.workflow.MonthlyReportActivities#queryMonthlyAwsUsage}
     */
    Promise<java.util.List<com.eucalyptus.portal.workflow.AwsUsageRecord>> queryMonthlyAwsUsage(Promise<String> accountId, Promise<String> service, Promise<String> year, Promise<String> month, Promise<java.util.Date> end);

    /**
     * Generated from {@link com.eucalyptus.portal.workflow.MonthlyReportActivities#queryMonthlyAwsUsage}
     */
    Promise<java.util.List<com.eucalyptus.portal.workflow.AwsUsageRecord>> queryMonthlyAwsUsage(Promise<String> accountId, Promise<String> service, Promise<String> year, Promise<String> month, Promise<java.util.Date> end, Promise<?>... waitFor);

    /**
     * Generated from {@link com.eucalyptus.portal.workflow.MonthlyReportActivities#queryMonthlyAwsUsage}
     */
    Promise<java.util.List<com.eucalyptus.portal.workflow.AwsUsageRecord>> queryMonthlyAwsUsage(Promise<String> accountId, Promise<String> service, Promise<String> year, Promise<String> month, Promise<java.util.Date> end, ActivitySchedulingOptions optionsOverride, Promise<?>... waitFor);

    /**
     * Generated from {@link com.eucalyptus.portal.workflow.MonthlyReportActivities#transform}
     */
    Promise<java.util.List<com.eucalyptus.portal.workflow.MonthlyUsageRecord>> transform(java.util.List<com.eucalyptus.portal.workflow.AwsUsageRecord> awsUsage);

    /**
     * Generated from {@link com.eucalyptus.portal.workflow.MonthlyReportActivities#transform}
     */
    Promise<java.util.List<com.eucalyptus.portal.workflow.MonthlyUsageRecord>> transform(java.util.List<com.eucalyptus.portal.workflow.AwsUsageRecord> awsUsage, Promise<?>... waitFor);

    /**
     * Generated from {@link com.eucalyptus.portal.workflow.MonthlyReportActivities#transform}
     */
    Promise<java.util.List<com.eucalyptus.portal.workflow.MonthlyUsageRecord>> transform(java.util.List<com.eucalyptus.portal.workflow.AwsUsageRecord> awsUsage, ActivitySchedulingOptions optionsOverride, Promise<?>... waitFor);

    /**
     * Generated from {@link com.eucalyptus.portal.workflow.MonthlyReportActivities#transform}
     */
    Promise<java.util.List<com.eucalyptus.portal.workflow.MonthlyUsageRecord>> transform(Promise<java.util.List<com.eucalyptus.portal.workflow.AwsUsageRecord>> awsUsage);

    /**
     * Generated from {@link com.eucalyptus.portal.workflow.MonthlyReportActivities#transform}
     */
    Promise<java.util.List<com.eucalyptus.portal.workflow.MonthlyUsageRecord>> transform(Promise<java.util.List<com.eucalyptus.portal.workflow.AwsUsageRecord>> awsUsage, Promise<?>... waitFor);

    /**
     * Generated from {@link com.eucalyptus.portal.workflow.MonthlyReportActivities#transform}
     */
    Promise<java.util.List<com.eucalyptus.portal.workflow.MonthlyUsageRecord>> transform(Promise<java.util.List<com.eucalyptus.portal.workflow.AwsUsageRecord>> awsUsage, ActivitySchedulingOptions optionsOverride, Promise<?>... waitFor);

    /**
     * Generated from {@link com.eucalyptus.portal.workflow.MonthlyReportActivities#persist}
     */
    Promise<Void> persist(String accountId, String year, String month, java.util.List<com.eucalyptus.portal.workflow.MonthlyUsageRecord> monthly);

    /**
     * Generated from {@link com.eucalyptus.portal.workflow.MonthlyReportActivities#persist}
     */
    Promise<Void> persist(String accountId, String year, String month, java.util.List<com.eucalyptus.portal.workflow.MonthlyUsageRecord> monthly, Promise<?>... waitFor);

    /**
     * Generated from {@link com.eucalyptus.portal.workflow.MonthlyReportActivities#persist}
     */
    Promise<Void> persist(String accountId, String year, String month, java.util.List<com.eucalyptus.portal.workflow.MonthlyUsageRecord> monthly, ActivitySchedulingOptions optionsOverride, Promise<?>... waitFor);

    /**
     * Generated from {@link com.eucalyptus.portal.workflow.MonthlyReportActivities#persist}
     */
    Promise<Void> persist(Promise<String> accountId, Promise<String> year, Promise<String> month, Promise<java.util.List<com.eucalyptus.portal.workflow.MonthlyUsageRecord>> monthly);

    /**
     * Generated from {@link com.eucalyptus.portal.workflow.MonthlyReportActivities#persist}
     */
    Promise<Void> persist(Promise<String> accountId, Promise<String> year, Promise<String> month, Promise<java.util.List<com.eucalyptus.portal.workflow.MonthlyUsageRecord>> monthly, Promise<?>... waitFor);

    /**
     * Generated from {@link com.eucalyptus.portal.workflow.MonthlyReportActivities#persist}
     */
    Promise<Void> persist(Promise<String> accountId, Promise<String> year, Promise<String> month, Promise<java.util.List<com.eucalyptus.portal.workflow.MonthlyUsageRecord>> monthly, ActivitySchedulingOptions optionsOverride, Promise<?>... waitFor);

    /**
     * Generated from {@link com.eucalyptus.portal.workflow.MonthlyReportActivities#uploadToS3Bucket}
     */
    Promise<Void> uploadToS3Bucket(String accountId, String year, String month);

    /**
     * Generated from {@link com.eucalyptus.portal.workflow.MonthlyReportActivities#uploadToS3Bucket}
     */
    Promise<Void> uploadToS3Bucket(String accountId, String year, String month, Promise<?>... waitFor);

    /**
     * Generated from {@link com.eucalyptus.portal.workflow.MonthlyReportActivities#uploadToS3Bucket}
     */
    Promise<Void> uploadToS3Bucket(String accountId, String year, String month, ActivitySchedulingOptions optionsOverride, Promise<?>... waitFor);

    /**
     * Generated from {@link com.eucalyptus.portal.workflow.MonthlyReportActivities#uploadToS3Bucket}
     */
    Promise<Void> uploadToS3Bucket(Promise<String> accountId, Promise<String> year, Promise<String> month);

    /**
     * Generated from {@link com.eucalyptus.portal.workflow.MonthlyReportActivities#uploadToS3Bucket}
     */
    Promise<Void> uploadToS3Bucket(Promise<String> accountId, Promise<String> year, Promise<String> month, Promise<?>... waitFor);

    /**
     * Generated from {@link com.eucalyptus.portal.workflow.MonthlyReportActivities#uploadToS3Bucket}
     */
    Promise<Void> uploadToS3Bucket(Promise<String> accountId, Promise<String> year, Promise<String> month, ActivitySchedulingOptions optionsOverride, Promise<?>... waitFor);

}